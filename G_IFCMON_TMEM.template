#--------------------------------------------------------------------
# Original Author: KR84 / Paul Scherrer Institut
# $Author: kalt_r $
# $Date: 2012/05/08 13:23:20 $
#
# $Revision: 1.3 $
# $Header: /cvs/G/IFCMON/G_IFCMON_TMEM.template,v 1.3 2012/05/08 13:23:20 kalt_r Exp $
#
#--------------------------------------------------------------------


# Module Description:
# Contains the generic records for __one__ IFC1210 TOSCA-II SUSER block: USR1
#   
# You may find specification of SUSER1/2 generic Memory Map here:
# https://codebeamer.psi.ch/cb/proj/sources/sccFileLog.do?proj_id=104&filename=IFC%2FIFC1210_generic%2FFirmware%2FDocumentation%2FIFC1210_TOSCA-II_USER_and_SUSER_Implementation_Rules.doc&isDir=false
#
# This template requires following in a common part of the startup.script:
#       pevConfigure(0,"Usr1Pev","USR1", 0)
#    or pevAsynConfigure(0,"asynUsr1Pev","USR1", 0)
#
#
# This template requires following substitution parameters:
# $(IOC)                                        The system name
#
#--------------------------------------------------------------------




record(fanout,"$(IOC):TMEM-FAN1")
{
    field(DESC, "periodical proc.")
    field(SCAN, "10 second")
    field(LNK1 ,"$(IOC):CENTRAL-REVISION")
}


#--------------------------------------------------------------------



record(ai,"$(IOC):CENTRAL-REVISION")
{
    field(DESC, "CENTRAL USR1 rev.")
    field(DTYP, "regDevAsyn")
    field(INP , "#C S @asynUsr1Pev/0x000000 T=UINT32")
    field(FLNK, "$(IOC):CENTRAL-SIGNATURE")
}

record(ai,"$(IOC):CENTRAL-SIGNATURE")
{
    field(DESC, "CENTRAL USR1 sign")
    field(DTYP, "regDevAsyn")
    field(INP , "#C S @asynUsr1Pev/0x000004 T=UINT32")
    field(FLNK, "$(IOC):CENTRAL-NAME")
}

record(stringin,"$(IOC):CENTRAL-NAME")
{
    field(DESC, "CENTRAL Fw name")
    field(DTYP, "regDevAsyn")
    field(INP , "#C S @asynUsr1Pev/0x000008 T=STRING L=32")
    field(FLNK, "$(IOC):FMC1-TYPE")
}

record(stringin,"$(IOC):FMC1-TYPE")
{
    field(DESC, "expected FMC1 type")
    field(DTYP, "regDevAsyn")
    field(INP , "#C S @asynUsr1Pev/0x000028 T=STRING L=16")
    field(FLNK, "$(IOC):FMC2-TYPE")
}

record(stringin,"$(IOC):FMC2-TYPE")
{
    field(DESC, "expected FMC2 type")
    field(DTYP, "regDevAsyn")
    field(INP , "#C S @asynUsr1Pev/0x000038 T=STRING L=16")
    field(FLNK, "$(IOC):FMC-STATUS")
}

record(ai,"$(IOC):FMC-STATUS")
{
    field(DESC, "CENTRAL FMC status")
    field(DTYP, "regDevAsyn")
    field(INP , "#C S @asynUsr1Pev/0x000050 T=UINT32")
    field(FLNK, "$(IOC):FMC1-INIT")
}
record ( mbbi, "$(IOC):FMC1-INIT" )
{
    field(DESC, "FMC1 init status" )
    field(DTYP, "Raw Soft Channel" )
    field(INP, "$(IOC):FMC-STATUS NPP" )
    field(SHFT, "2" )
    field(NOBT, "2" )
    field(ZRVL, "0" )
    field(ZRST, "not implemented" )
    field(ZRSV, "NO_ALARM" )
    field(ONVL, "1" )
    field(ONST, "reset state" )
    field(ONSV, "MAJOR" )
    field(TWVL, "2" )
    field(TWST, "init" )
    field(TWSV, "MAJOR" )
    field(THVL, "3" )
    field(THST, "ready" )
    field(THSV, "NO_ALARM" )
    field(FLNK, "$(IOC):FMC1-CLOCK")
}
record ( mbbi, "$(IOC):FMC1-CLOCK" )
{
    field(DESC, "FMC1 ext clock status" )
    field(DTYP, "Raw Soft Channel" )
    field(INP, "$(IOC):FMC-STATUS NPP" )
    field(SHFT, "4" )
    field(NOBT, "2" )
    field(ZRVL, "0" )
    field(ZRST, "not implemented" )
    field(ZRSV, "NO_ALARM" )
    field(ONVL, "1" )
    field(ONST, "unlocked" )
    field(ONSV, "MAJOR" )
    field(TWVL, "2" )
    field(TWST, "reserved" )
    field(TWSV, "MAJOR" )
    field(THVL, "3" )
    field(THST, "locked" )
    field(THSV, "NO_ALARM" )
    field(FLNK, "$(IOC):FMC2-INIT")
}
record ( mbbi, "$(IOC):FMC2-INIT" )
{
    field(DESC, "FMC2 init status" )
    field(DTYP, "Raw Soft Channel" )
    field(INP, "$(IOC):FMC-STATUS NPP" )
    field(SHFT, "18" )
    field(NOBT, "2" )
    field(ZRVL, "0" )
    field(ZRST, "not implemented" )
    field(ZRSV, "NO_ALARM" )
    field(ONVL, "1" )
    field(ONST, "reset state" )
    field(ONSV, "MAJOR" )
    field(TWVL, "2" )
    field(TWST, "init" )
    field(TWSV, "MAJOR" )
    field(THVL, "3" )
    field(THST, "ready" )
    field(THSV, "NO_ALARM" )
    field(FLNK, "$(IOC):FMC2-CLOCK")
}
record ( mbbi, "$(IOC):FMC2-CLOCK" )
{
    field(DESC, "FMC2 ext clock status" )
    field(DTYP, "Raw Soft Channel" )
    field(INP, "$(IOC):FMC-STATUS NPP" )
    field(SHFT, "20" )
    field(NOBT, "2" )
    field(ZRVL, "0" )
    field(ZRST, "not implemented" )
    field(ZRSV, "NO_ALARM" )
    field(ONVL, "1" )
    field(ONST, "unlocked" )
    field(ONSV, "MAJOR" )
    field(TWVL, "2" )
    field(TWST, "reserved" )
    field(TWSV, "MAJOR" )
    field(THVL, "3" )
    field(THST, "locked" )
    field(THSV, "NO_ALARM" )
    field(FLNK, "$(IOC):USR-STATUS")
}


record(ai,"$(IOC):USR-STATUS")
{
    field(DESC, "CENTRAL USR status")
    field(DTYP, "regDevAsyn")
    field(INP , "#C S @asynUsr1Pev/0x000050 T=UINT32")
    field(FLNK, "$(IOC):USRCLK")
}
record ( mbbi, "$(IOC):USRCLK" )
{
    field(DESC, "CENTRAL/USR clock" )
    field(DTYP, "Raw Soft Channel" )
    field(INP, "$(IOC):USR-STATUS NPP" )
    field(SHFT, "0" )
    field(NOBT, "2" )
    field(ZRVL, "0" )
    field(ZRST, "100 MHz" )
    field(ONVL, "1" )
    field(ONST, "125 MHz" )
    field(TWVL, "2" )
    field(TWST, "166 MHz" )
    field(THVL, "3" )
    field(THST, "200 MHz" )
}




# missing: the GTX status and command registers
