# Module Description:
# Contains the records for P2020 ELB-bus towards PON FPGA on IFC1210 mainboard.
# 
# You find more infos on ELB bus structure here beginning section 4.2:
# https://codebeamer.psi.ch/cb/displayDocument/IFC1210_UG_Vx.pdf?doc_id=139156
# 
#
# This template requires following substitution parameters:
# $(IOC)                                        The system name
#
#--------------------------------------------------------------------


#--------------------------------------------------------------------
# status / processing once at EPICS startup
#--------------------------------------------------------------------

# refer to chapters 2.3.1 - 2.3.4 in IFC1210 UG
# bits 7:0      DIP SW101
# bits 15:8     DIP SW100
# bits 27:24    HexRot SW102
# bits 31:28    HexRot SW103
record(longin, "$(IOC):ELB-STATIC-SW")
{
    field(DESC, "status of switches")
    field(PINI, "YES")
    field(DTYP, "ifc1210")
    field(INP , "#C S0x4 @ELB")
    field(FLNK, "$(IOC):SW101-VMEMODE")
}
# SW101
record(mbbi, "$(IOC):SW101-VMEMODE")
{
    field(DESC, "SW101 VME mode")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "0")
    field(NOBT, "2")
    field(ZRVL, "0")
    field(ZRST, "VME64x + CR/CSR")
    field(ONVL, "1")
    field(ONST, "CR/CSR A24 rot")
    field(TWVL, "2")
    field(TWST, "64k map to A24")
    field(THVL, "3")
    field(THST, "VME64x Auto_ID")
    field(FLNK, "$(IOC):SW101-VMESLOT1")
}
record(mbbi, "$(IOC):SW101-VMESLOT1")
{
    field(DESC, "SW101 VME slot1")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "2")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "enabled")
    field(ONVL, "1")
    field(ONST, "auto-enable")
    field(FLNK, "$(IOC):SW101-VMERXSYSRST")
}
record(mbbi, "$(IOC):SW101-VMERXSYSRST")
{
    field(DESC, "SW101 VME RX sysrst")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "3")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "reset VME64x")
    field(ONVL, "1")
    field(ONST, "force cold-rst")
    field(FLNK, "$(IOC):SW101-P2020BOOT")
}
record(mbbi, "$(IOC):SW101-P2020BOOT")
{
    field(DESC, "SW101 P2020 boot mode")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "4")
    field(NOBT, "2")
    field(ZRVL, "0")
    field(ZRST, "uSD card")
    field(ONVL, "1")
    field(ONST, "NOR FLASH (def)")
    field(TWVL, "2")
    field(TWST, "SPI FLASH")
    field(THVL, "3")
    field(THST, "no boot")
    field(FLNK, "$(IOC):SW101-VMETXSYSRST")
}
record(mbbi, "$(IOC):SW101-VMETXSYSRST")
{
    field(DESC, "SW101 VME TX sysrst")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "6")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "not asserted")
    field(ONVL, "1")
    field(ONST, "asserted slot 1")
    field(FLNK, "$(IOC):SW100-FPGACONFIG")
}
# SW100
record(mbbi, "$(IOC):SW100-FPGACONFIG")
{
    field(DESC, "SW100 FPGA config")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "8")
    field(NOBT, "2")
    field(ZRVL, "0")
    field(ZRST, "backup bitstr")
    field(ONVL, "1")
    field(ONST, "1st bitstream")
    field(TWVL, "2")
    field(TWST, "2nd bitstream")
    field(THVL, "3")
    field(THST, "3rd bitstream")
    field(FLNK, "$(IOC):SW100-JTAGCONFIG")
}
record(mbbi, "$(IOC):SW100-JTAGCONFIG")
{
    field(DESC, "SW101 Xilinx JTAG")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "10")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "JTAG disabled")
    field(ONVL, "1")
    field(ONST, "JTAG enabled")
    field(FLNK, "$(IOC):SW100-COLDRESET")
}
record(mbbi, "$(IOC):SW100-COLDRESET")
{
    field(DESC, "SW101 cold reset")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "11")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "Autonomous")
    field(ONVL, "1")
    field(ONST, "P2020 (def)")
    field(FLNK, "$(IOC):SW100-PONFSM")
}
record(mbbi, "$(IOC):SW100-PONFSM")
{
    field(DESC, "SW101 PON FSM")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "12")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "PONFSM disabled")
    field(ONVL, "1")
    field(ONST, "PONFSM enabled")
    field(FLNK, "$(IOC):SW100-PONFSMMODE")
}
record(mbbi, "$(IOC):SW100-PONFSMMODE")
{
    field(DESC, "SW101 PONFSM mode")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "13")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "unified PONFSM")
    field(ONVL, "1")
    field(ONST, "indep. PONFSM")
    field(FLNK, "$(IOC):SW100-SWITCHMODE")
}
record(mbbi, "$(IOC):SW100-SWITCHMODE")
{
    field(DESC, "SW101 PCIe switch")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "14")
    field(NOBT, "2")
    field(ZRVL, "0")
    field(ZRST, "Single part")
    field(ONVL, "1")
    field(ONST, "Single part/lat")
    field(TWVL, "2")
    field(TWST, "Single part/EE")
    field(THVL, "3")
    field(THST, "reserved")
    field(FLNK, "$(IOC):SW102-HEXROT")
}
# SW102: VME64x base A23:20
record(mbbi, "$(IOC):SW102-HEXROT")
{
    field(DESC, "SW102 VME64x A23:20")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "24")
    field(NOBT, "4")
    field(FLNK, "$(IOC):SW103-HEXROT")
}
# SW103: VME64x base A19:16
record(mbbi, "$(IOC):SW103-HEXROT")
{
    field(DESC, "SW102 VME64x A19:16")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-STATIC-SW MS")
    field(SHFT, "28")
    field(NOBT, "4")
    field(FLNK, "$(IOC):ELB-PCIESW-CTL")
}

record(longin, "$(IOC):ELB-PCIESW-CTL")
{
    field(DESC, "PCIe switch ctrl")
    field(DTYP, "ifc1210")
    field(INP , "#C S0x14 @ELB")
    field(FLNK, "$(IOC):PCIESTACK-XMC1")
}
record(mbbi, "$(IOC):PCIESTACK-XMC1")
{
    field(DESC, "XMC1 PCIe lane cfg")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-PCIESW-CTL MS")
    field(SHFT, "0")
    field(NOBT, "2")
    field(ZRVL, "0")
    field(ZRST, "x8")
    field(ONVL, "1")
    field(ONST, "x4 x4 (default)")
    field(TWVL, "2")
    field(TWST, "x2 x2 x4")
    field(THVL, "3")
    field(THST, "x2 x2 x2 x2")
    field(FLNK, "$(IOC):PCIESTACK-XMC2")
}
record(mbbi, "$(IOC):PCIESTACK-XMC2")
{
    field(DESC, "XMC2 PCIe lane cfg")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-PCIESW-CTL MS")
    field(SHFT, "16")
    field(NOBT, "2")
    field(ZRVL, "0")
    field(ZRST, "x8")
    field(ONVL, "1")
    field(ONST, "x4 x4 (default)")
    field(TWVL, "2")
    field(TWST, "x2 x2 x4")
    field(THVL, "3")
    field(THST, "x2 x2 x2 x2")
    field(FLNK, "$(IOC):PCIESTACK-IFCTC1")
}
# warning, mbbi takes only 4 LSB's of total 5-bits in register!
record(mbbi, "$(IOC):PCIESTACK-IFCTC1")
{
    field(DESC, "IFCTC1 PCIe stk")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-PCIESW-CTL MS")
    field(SHFT, "8")
    field(NOBT, "4")
    
    field(ONVL, "1")
    field(ONST, "SFP:x4 / HCI:x4")
    
    field(TWVL, "2")
    field(TWST, "SFP:x2x2/HCI:x4")
    
    field(TTVL, "13")
    field(TTST, "SFP:x1 / HCI:x4")
    
    field(FLNK, "$(IOC):PCIE-CONFMODE")
}
record(mbbi, "$(IOC):PCIE-CONFMODE")
{
    field(DESC, "PCIe switch conf mod.")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-PCIESW-CTL MS")
    field(SHFT, "24")
    field(NOBT, "4")
    field(ZRVL, "0")
    field(ZRST, "Single part")
    field(ONVL, "1")
    field(ONST, "Single part/lat")
    field(TWVL, "2")
    field(TWST, "Single part/EE")
    field(THVL, "3")
    field(THST, "S. part/lat/EE")
    field(FLNK, "$(IOC):PCIE-CLKMODE")
}
record(mbbi, "$(IOC):PCIE-CLKMODE")
{
    field(DESC, "PCIe switch CLK mod.")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-PCIESW-CTL MS")
    field(SHFT, "28")
    field(NOBT, "2")
    field(ZRVL, "0")
    field(ZRST, "global clk mode")
    field(ONVL, "1")
    field(ONST, "local clk mode")
    field(FLNK, "$(IOC):ELB-PON-SIGN")
}

record(longin, "$(IOC):ELB-PON-SIGN")
{
    field(DESC, "PON FPGA signature")
    field(DTYP, "ifc1210")
    field(INP , "#C S0x1C @ELB")
    field(FLNK, "$(IOC):ELB-NOR")
}

# Strings for UBOOT versions display
record(stringin, "$(IOC):ELB-NOR"){
    field(DTYP, "ifc1210")
    field(INP, "#C S0x20 @ELB 32")
    field(FLNK, "$(IOC):ELB-SPI")
}

record(stringin, "$(IOC):ELB-SPI"){
    field(DTYP, "ifc1210")
    field(INP, "#C S0x40 @ELB 32")
    field(FLNK, "$(IOC):ELB-PON")
}

record(stringin, "$(IOC):ELB-PON"){
    field(DTYP, "ifc1210")
    field(INP, "#C S0x60 @ELB 32")
}

#--------------------------------------------------------------------
# status / cyclic processing
#--------------------------------------------------------------------

# FPM 1 and 2 are swapped relative to IFC1210_UG_Vx.pdf !
record(longin, "$(IOC):ELB-FMCXMC-CTL")
{
    field(DESC, "status XMC/FMC")
    field(DTYP, "ifc1210")
    field(INP , "#C S0xC @ELB")
    field(SCAN, "$(SCAN)")
    field(EVNT, "$(EVNT)")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):XMC2-PRESENT")
}
record(mbbi, "$(IOC):XMC2-PRESENT")
{
    field(DESC, "XMC2 present")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-FMCXMC-CTL MS")
    field(SHFT, "0")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "present")
    field(ZRSV, "NO_ALARM")
    field(ONVL, "1")
    field(ONST, "not present")
    field(ONSV, "MINOR")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):XMC1-PRESENT")
}
record(mbbi, "$(IOC):XMC1-PRESENT")
{
    field(DESC, "XMC1 present")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-FMCXMC-CTL MS")
    field(SHFT, "1")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "present")
    field(ZRSV, "NO_ALARM")
    field(ONVL, "1")
    field(ONST, "not present")
    field(ONSV, "MINOR")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):FMC2-PGM2C")
}
record(mbbi, "$(IOC):FMC2-PGM2C")
{
    field(DESC, "FMC2 M2C pwr st.")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-FMCXMC-CTL MS")
    field(SHFT, "17")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "unpowered")
    field(ZRSV, "MINOR")
    field(ONVL, "1")
    field(ONST, "powered")
    field(ONSV, "NO_ALARM")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):FMC2-PRESENT")
}
record(mbbi, "$(IOC):FMC2-PRESENT")
{
    field(DESC, "FMC2 present")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-FMCXMC-CTL MS")
    field(SHFT, "18")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "present")
    field(ZRSV, "NO_ALARM")
    field(ONVL, "1")
    field(ONST, "not present")
    field(ONSV, "MINOR")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):FMC1-PGM2C")
}
record(mbbi, "$(IOC):FMC1-PGM2C")
{
    field(DESC, "FMC1 M2C pwr st.")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-FMCXMC-CTL MS")
    field(SHFT, "21")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "unpowered")
    field(ZRSV, "MINOR")
    field(ONVL, "1")
    field(ONST, "powered")
    field(ONSV, "NO_ALARM")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):FMC1-PRESENT")
}
record(mbbi, "$(IOC):FMC1-PRESENT")
{
    field(DESC, "FMC1 present")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(IOC):ELB-FMCXMC-CTL MS")
    field(SHFT, "22")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "present")
    field(ZRSV, "NO_ALARM")
    field(ONVL, "1")
    field(ONST, "not present")
    field(ONSV, "MINOR")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):FMC12-PG-C2M")
}
record(mbbi, "$(IOC):FMC12-PG-C2M")
{
    field(DESC, "FMC1/2 pwr good")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(IOC):ELB-FMCXMC-CTL MS")
    field(SHFT, "30")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "power disabled")
    field(ZRSV, "MINOR")
    field(ONVL, "1")
    field(ONST, "power enabled")
    field(ONSV, "NO_ALARM")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):FMC12-VADJ-ENA")
}
record(mbbi, "$(IOC):FMC12-VADJ-ENA")
{
    field(DESC, "FMC1/2 Vadj ena")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(IOC):ELB-FMCXMC-CTL MS")
    field(SHFT, "31")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "Vadj disabled")
    field(ZRSV, "MINOR")
    field(ONVL, "1")
    field(ONST, "Vadj enabled")
    field(ONSV, "NO_ALARM")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):ELB-BMRCTL")
}

record(longin, "$(IOC):ELB-BMRCTL")
{
    field(DESC, "BMR463 dc/dc st.")
    field(DTYP, "ifc1210")
    field(INP , "#C S0x40 @ELB")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):BMR-SYNC-RUN")
}
record(mbbi, "$(IOC):BMR-SYNC-RUN")
{
    field(DESC, "BMR sync run status")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(IOC):ELB-BMRCTL MS")
    field(SHFT, "8")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "0")
    field(ZRSV, "MINOR")
    field(ONVL, "1")
    field(ONST, "1")
    field(ONSV, "NO_ALARM")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):BMR-POWER-ALERT")
}
record(mbbi, "$(IOC):BMR-POWER-ALERT")
{
    field(DESC, "BMR pwr alert status")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(IOC):ELB-BMRCTL MS")
    field(SHFT, "9")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "no alert")
    field(ZRSV, "NO_ALARM")
    field(ONVL, "1")
    field(ONST, "BMRxx alert")
    field(ONSV, "MAJOR")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):ELB-GENERAL-CTL")
}

record(longin, "$(IOC):ELB-GENERAL-CTL")
{
    field(DESC, "IFC1210 gen. ctrl")
    field(DTYP, "ifc1210")
    field(INP , "#C S0x10 @ELB")
    field(PRIO, "LOW")
    field(FLNK, "$(IOC):PGMCLOCK-ENA")
}
record(mbbi, "$(IOC):PGMCLOCK-ENA")
{
    field(DESC, "IDT pgm clk ena")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(IOC):ELB-GENERAL-CTL MS")
    field(SHFT, "2")
    field(NOBT, "1")
    field(ZRVL, "0")
    field(ZRST, "disabled")
    field(ZRSV, "NO_ALARM")
    field(ONVL, "1")
    field(ONST, "enabled")
    field(ONSV, "MINOR")
    field(PRIO, "LOW")
}
#    field(FLNK, "")  ## here is the end if the read/status processing chain used FLNKs at above records


#--------------------------------------------------------------------
# control bits only / update only if user enters value with PP
#--------------------------------------------------------------------

# no commands, only monitoring allowed in G_IFCMON


